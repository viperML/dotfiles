# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build flake

concurrency: build

on:
  pull_request:
  push:
    branches-ignore:
      - 'update*'
  workflow_dispatch:

jobs:
  show:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Flake show
      run: nix flake show

  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      flake_outputs: ${{ steps.generate_flake_outputs.outputs.flake_outputs }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - id: generate_flake_outputs
      name: Generate flake output matrix
      run: nix run .#dotci -L -- build-matrix >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [generate_matrix]
    if: ${{ needs.generate_matrix.outputs.flake_outputs != '[]' && needs.generate_matrix.outputs.flake_outputs != '' }}
    strategy:
      fail-fast: false
      # max-parallel: 5
      matrix:
        flake_output: ${{ fromJson(needs.generate_matrix.outputs.flake_outputs )}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Set up cachix
      uses: cachix/cachix-action@master
      with:
        name: viperml
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pathsToPush: result
    - name: Build output
      run: nix build .#${{ matrix.flake_output }} -L

  eval:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flake_output: [
          nixosConfigurations.hermes.config.system.build.toplevel,
          homeConfigurations.ayats.activationPackage
        ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Set up cachix
      uses: cachix/cachix-action@master
      with:
        name: viperml
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Eval output
      run: nix build .#${{ matrix.flake_output }} -L --dry-run --print-out-paths -j0
